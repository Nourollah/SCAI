[project]
name = "SCAI"
version = "0.1.0"
description = "Stefano's ComputoChem AI"
authors = ["Amir Masoud Nourollah <nourollah.am@gmail.com>"]
channels = ["pytorch", "nvidia", "conda-forge"]
platforms = ["linux-64", "osx-arm64", "win-64"]

[dependencies]
# Core environment with PyTorch and CUDA from Conda
python = ">=3.9,<3.12"
pytorch = { version = "==2.4.0", build = "*cuda12.1*" }
pytorch-cuda = "==12.1"
pip = "*"

# Other conda dependencies
e3nn = ">=0.5"
numpy = ">=1.26.0,<2.0.0"
pymatgen = ">=2023.10.3"
numba = "*"
orjson = "*"
pyyaml = "*"
tqdm = "*"
python-lmdb = "*"
submitit = "*"
tensorboard = "*"
wandb = "*"
huggingface_hub = ">=0.27.1"

[pypi-dependencies]
# Only dependencies that are not part of the special PyG install
hydra-core = "==1.3.2"
torchtnt = "==0.2.4"
emmet-core = "==0.84.5"
ase = { git = "https://gitlab.com/ase/ase.git", rev = "4a5e1f69979f9f5463a82001245e5471364adcf1" }
ase-db-backends = { git = "https://gitlab.com/ase/ase-db-backends.git", rev = "2fda57e952c0d1cd2fd511eee5a2659f85ebe64a" }
fairchem = { path = ".", editable = true }
ipython = ">=9.4.0, <10"
wandb = "*"

#[tool.pixi.pypi-dependencies]


[tasks]
# This is now a lifecycle hook that runs automatically after 'pixi install'
post_install = "pip install torch_geometric pyg_lib torch_scatter torch_sparse torch_cluster torch_spline_conv --find-links https://data.pyg.org/whl/torch-2.4.0+cu121.html"
train = "python3 main.py --mode train --config-yml"
optmization_sweep = "python3 -m pip wandb sweep --project" # needs to get project name and sweel.yaml as arguments
optimization_run = "python3 -m pip wandb agent " # needs to get YOUR_USERNAME/YOUR_PROJECT_NAME/sweep_id as arguments
